version: '3'
tasks:
  generate-meta:
    cmds:
      - python3 tasks/generate_parser.py -g pegen/metagrammar.gram -o pegen/grammar_parser.py
      - ruff format pegen/grammar_parser.py
  generate:
    cmds:
      - python3 tasks/generate_parser.py
    generates:
      - peg_parser/parser.py
    sources:
      - tasks/xonsh.gram
      - peg_parser/*.py
      - pegen/*.py

  profile:
    cmds:
      - mkdir -p .local/logs
      - python tasks/profile_mem.py | tee {{.LOG_FILE}}
      - python tasks/simple.py | tee -a {{.LOG_FILE}}
      - asv profile benchmarks.PeakMemSuite.peakmem_parser_large_file | tee -a {{.LOG_FILE}}
    vars:
      LOG_FILE:
        sh: echo ".local/logs/xonsh-parser-$(date "+%Y%m%d-%H%M%S").$(git rev-parse --short HEAD).log"

  ply-add:
    cmds:
      - git subtree add --prefix=ply --squash

  pegen-add:
    cmds:
      - git fetch https://github.com/we-like-parsers/pegen.git main:tmp-pegen-main --no-tags --depth 1
      - git show tmp-pegen-main:data/python.gram > .local/python.gram
      - git read-tree --prefix=pegen -u tmp-pegen-main:src/pegen

  test:
    deps:
      - generate
    cmds:
      - python -m pytest {{.CLI_ARGS}}
    sources:
      - '**/*.py'

  wtest:
    cmds:
      - watchexec -e py,gram --clear -- task test -- --ff -x -vv --testmon

  bench:
    cmds:
      - mkdir -p .local/logs
      - asv run --python=same --show-stderr | tee .local/logs/bench.$(date "+%Y%m%d-%H%M%S").$(git rev-parse --short HEAD).txt

  bench-view:
    cmds:
      - asv run "main^!" -v
      - asv publish
      - asv preview

  memray:
    cmds:
      - pytest --memray

  mypy:
    cmds:
      - watchexec -e py --clear -- mypy peg_parser

  mypyc:
    cmds:
      - env COMPILE_WITH_MYPYC=1 pip install -e .
    sources:
      - peg_parser/subheader.py
      - peg_parser/toke*.py

  clean:
    cmds:
      - find peg_parser -name "*.so" -delete -print